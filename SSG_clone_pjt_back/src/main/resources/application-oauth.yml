spring:
  security:
    oauth2.client:
      registration:
        google:
          clientId: "Client_ID"
          clientSecret: "Client_Secret"
          scope:
            - email
            - profile
          redirect-uri: https://ssghot.shop/api/login/oauth2/code/google
        naver:
          client-id: "Client_ID"
          client-secret: "Client_Secret"
          scope:
            - name
            - email
            - profile_image
          client-name: Naver # 클라이언트 네임은 구글 페이스북도 대문자로 시작하더라.
          authorization-grant-type: authorization_code
          redirect-uri: https://ssghot.shop/api/login/oauth2/code/naver
        kakao:
          clientId: "Client_ID"
          clientSecret: "Client_Secret"
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: https://ssghot.shop/api/login/oauth2/code/kakao
          scope:
            - profile_nickname
            - profile_image
            - account_email
          clientName: Kakao
      # Provider 설정
      provider:
        naver:
          authorization-uri: https://nid.naver.com/oauth2.0/authorize
          token-uri: https://nid.naver.com/oauth2.0/token
          user-info-uri: https://openapi.naver.com/v1/nid/me
          user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.
        kakao:
          authorizationUri: https://kauth.kakao.com/oauth/authorize
          tokenUri: https://kauth.kakao.com/oauth/token
          userInfoUri: https://kapi.kakao.com/v2/user/me
          userNameAttribute: id
